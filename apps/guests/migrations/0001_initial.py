# Generated by Django 5.0.10 on 2025-10-23 02:51

import apps.core.fields
import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Guest",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier (UUID)",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the record was created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when the record was last updated",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        help_text="First name (1-100 characters)", max_length=100
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        help_text="Last name (1-100 characters)", max_length=100
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        help_text="Email address (must be unique)",
                        max_length=255,
                        unique=True,
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        help_text="Phone number with country code (e.g., +1-555-0123)",
                        max_length=20,
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True,
                        help_text="Date of birth (must be 18+ for primary guest)",
                        null=True,
                    ),
                ),
                (
                    "nationality",
                    models.CharField(
                        blank=True,
                        help_text="ISO 3166-1 alpha-2 country code",
                        max_length=2,
                        null=True,
                    ),
                ),
                (
                    "id_document_type",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("passport", "Passport"),
                            ("drivers_license", "Driver's License"),
                            ("national_id", "National ID"),
                            ("other", "Other"),
                        ],
                        help_text="Type of ID document",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "id_document_number",
                    apps.core.fields.EncryptedCharField(
                        blank=True,
                        help_text="ID document number (encrypted at rest)",
                        max_length=50,
                        null=True,
                    ),
                ),
                (
                    "address",
                    models.JSONField(
                        blank=True,
                        help_text="Home address (street, city, state, postal_code, country)",
                        null=True,
                    ),
                ),
                (
                    "preferences",
                    models.JSONField(
                        blank=True,
                        help_text="Guest preferences (room floor, bed type, dietary, etc.)",
                        null=True,
                    ),
                ),
                (
                    "loyalty_tier",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("bronze", "Bronze"),
                            ("silver", "Silver"),
                            ("gold", "Gold"),
                            ("platinum", "Platinum"),
                        ],
                        help_text="Loyalty program tier",
                        max_length=20,
                        null=True,
                    ),
                ),
                (
                    "loyalty_points",
                    models.IntegerField(
                        default=0,
                        help_text="Loyalty points balance (cannot be negative)",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "vip_status",
                    models.BooleanField(default=False, help_text="VIP guest flag"),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Staff notes about guest (max 2000 characters)",
                        max_length=2000,
                        null=True,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        blank=True,
                        help_text="Linked user account (if registered)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="guest_profile",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Guest",
                "verbose_name_plural": "Guests",
                "ordering": ["last_name", "first_name"],
                "indexes": [
                    models.Index(fields=["email"], name="guests_gues_email_e4fe59_idx"),
                    models.Index(
                        fields=["last_name", "first_name"],
                        name="guests_gues_last_na_682095_idx",
                    ),
                    models.Index(
                        fields=["loyalty_tier"], name="guests_gues_loyalty_4d5cc5_idx"
                    ),
                ],
            },
        ),
    ]
