# Generated by Django 5.0.10 on 2025-10-23 02:15

import django.core.validators
import django.db.models.deletion
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Hotel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier (UUID)",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the record was created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when the record was last updated",
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="Hotel name (3-200 characters)", max_length=200),
                ),
                (
                    "slug",
                    models.SlugField(
                        help_text="URL-safe identifier (globally unique)",
                        max_length=200,
                        unique=True,
                    ),
                ),
                (
                    "brand",
                    models.CharField(
                        blank=True,
                        help_text="Brand name (if part of a chain)",
                        max_length=100,
                        null=True,
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("independent", "Independent"),
                            ("chain", "Chain"),
                            ("boutique", "Boutique"),
                        ],
                        help_text="Hotel type",
                        max_length=20,
                    ),
                ),
                (
                    "address",
                    models.JSONField(
                        help_text="Physical address (street, city, state, postal_code, country)"
                    ),
                ),
                (
                    "contact",
                    models.JSONField(help_text="Contact information (phone, email, website)"),
                ),
                (
                    "timezone",
                    models.CharField(
                        help_text="IANA timezone (e.g., 'America/New_York')",
                        max_length=50,
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        help_text="ISO 4217 currency code (e.g., 'USD')", max_length=3
                    ),
                ),
                (
                    "languages",
                    models.JSONField(
                        help_text="Supported languages as ISO 639-1 codes (e.g., ['en', 'es'])"
                    ),
                ),
                (
                    "check_in_time",
                    models.TimeField(help_text="Default check-in time (e.g., '15:00')"),
                ),
                (
                    "check_out_time",
                    models.TimeField(help_text="Default check-out time (e.g., '11:00')"),
                ),
                (
                    "total_rooms",
                    models.IntegerField(
                        help_text="Total number of rooms in the hotel",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, help_text="Hotel active status"),
                ),
                (
                    "settings",
                    models.JSONField(
                        blank=True,
                        help_text="Additional hotel settings (booking rules, policies, etc.)",
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Hotel",
                "verbose_name_plural": "Hotels",
                "ordering": ["name"],
                "indexes": [
                    models.Index(fields=["slug"], name="hotels_hote_slug_ae692c_idx"),
                    models.Index(fields=["is_active"], name="hotels_hote_is_acti_64ad6f_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="RoomType",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier (UUID)",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the record was created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when the record was last updated",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Room type name (e.g., 'Deluxe Suite')",
                        max_length=100,
                    ),
                ),
                (
                    "code",
                    models.CharField(help_text="Short code (e.g., 'DLX', 'STD')", max_length=20),
                ),
                (
                    "description",
                    models.TextField(
                        blank=True,
                        help_text="Detailed description",
                        max_length=2000,
                        null=True,
                    ),
                ),
                (
                    "max_occupancy",
                    models.IntegerField(
                        help_text="Maximum total guests",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "max_adults",
                    models.IntegerField(
                        help_text="Maximum adults",
                        validators=[django.core.validators.MinValueValidator(1)],
                    ),
                ),
                (
                    "max_children",
                    models.IntegerField(
                        help_text="Maximum children",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "base_price",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Base nightly rate",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                (
                    "size_sqm",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Room size in square meters",
                        max_digits=6,
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                (
                    "bed_configuration",
                    models.JSONField(
                        help_text="Bed types and counts (e.g., [{'type': 'king', 'count': 1}])"
                    ),
                ),
                (
                    "amenities",
                    models.JSONField(
                        help_text="Room amenities (e.g., ['wifi', 'tv', 'mini_fridge'])"
                    ),
                ),
                (
                    "images",
                    models.JSONField(blank=True, help_text="Room photos with URLs", null=True),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, help_text="Available for booking"),
                ),
                (
                    "display_order",
                    models.IntegerField(default=0, help_text="Sort order in listings"),
                ),
                (
                    "hotel",
                    models.ForeignKey(
                        help_text="Parent hotel",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="room_types",
                        to="hotels.hotel",
                    ),
                ),
            ],
            options={
                "verbose_name": "Room Type",
                "verbose_name_plural": "Room Types",
                "ordering": ["hotel", "display_order", "name"],
            },
        ),
        migrations.CreateModel(
            name="Room",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        help_text="Unique identifier (UUID)",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True,
                        help_text="Timestamp when the record was created",
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True,
                        help_text="Timestamp when the record was last updated",
                    ),
                ),
                (
                    "room_number",
                    models.CharField(
                        help_text="Room identifier (e.g., '101', 'A-205')",
                        max_length=20,
                    ),
                ),
                (
                    "floor",
                    models.IntegerField(
                        blank=True,
                        help_text="Floor number (can be negative for basement)",
                        null=True,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("available", "Available"),
                            ("occupied", "Occupied"),
                            ("maintenance", "Maintenance"),
                            ("blocked", "Blocked"),
                            ("out_of_order", "Out of Order"),
                        ],
                        default="available",
                        help_text="Operational status",
                        max_length=20,
                    ),
                ),
                (
                    "cleaning_status",
                    models.CharField(
                        choices=[
                            ("clean", "Clean"),
                            ("dirty", "Dirty"),
                            ("in_progress", "In Progress"),
                            ("inspected", "Inspected"),
                        ],
                        default="clean",
                        help_text="Housekeeping status",
                        max_length=20,
                    ),
                ),
                (
                    "features",
                    models.JSONField(blank=True, help_text="Room-specific features", null=True),
                ),
                (
                    "notes",
                    models.TextField(
                        blank=True,
                        help_text="Internal notes",
                        max_length=1000,
                        null=True,
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, help_text="Available for assignment"),
                ),
                (
                    "hotel",
                    models.ForeignKey(
                        help_text="Parent hotel",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rooms",
                        to="hotels.hotel",
                    ),
                ),
                (
                    "room_type",
                    models.ForeignKey(
                        help_text="Room type/category",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="rooms",
                        to="hotels.roomtype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Room",
                "verbose_name_plural": "Rooms",
                "ordering": ["hotel", "room_number"],
            },
        ),
        migrations.AddIndex(
            model_name="roomtype",
            index=models.Index(
                fields=["hotel", "is_active"], name="hotels_room_hotel_i_898f3f_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="roomtype",
            unique_together={("hotel", "code")},
        ),
        migrations.AddIndex(
            model_name="room",
            index=models.Index(fields=["hotel", "status"], name="hotels_room_hotel_i_aa593c_idx"),
        ),
        migrations.AddIndex(
            model_name="room",
            index=models.Index(fields=["room_type"], name="hotels_room_room_ty_bf3be1_idx"),
        ),
        migrations.AlterUniqueTogether(
            name="room",
            unique_together={("hotel", "room_number")},
        ),
    ]
